---

- name: Create sieve redirect prefilter
  uri:
    url: "http://{{ mailcow__hostname }}/api/v1/add/filter"
    method: POST
    body_format: json
    return_content: yes
    status_code: 200
    body: "{{ mailcow__demo_sieve_redirect_filter_json | to_json }}"
    headers:
      X-API-Key: "{{ mailcow__api_key }}"
  register: result_sieve_prefilter_redirect
  until: ('json' in result_sieve_prefilter_redirect)
  retries: 10
  delay: 10

- name: Debug Creation
  debug:
    var: result_sieve_prefilter_redirect.json

# Send mail
- name: Sending a email to mailcow test instance always encrypted
  community.general.mail:
    host: "{{ vault__mailcow__prefiltr_redirect_host }}"
    port: 587
    from: "{{ vault__mailcow__prefiltr_redirect_user }}"
    username: "{{ vault__mailcow__prefiltr_redirect_user }}"
    password: "{{ vault__mailcow__prefiltr_redirect_password }}"
    to:
      - "{{ mailcow__mailbox_user_one }}@{{ mailcow__test_domain }}"
    subject: "sieve prefilter redirect test"
    body: System {{ ansible_hostname }} says hello
    secure: starttls
  register: result_sieve_prefilter_redirect_sendmail

- name: Wait 10 seconds before grabbing the rspamd logs
  wait_for:
    timeout: 10

# Get Rspamd Symbols
- name: Get Rspamd log using API
  uri:
    url: "http://{{ mailcow__hostname }}/api/v1/get/logs/rspamd-history/2"
    method: GET
    body_format: json
    return_content: yes
    status_code: 200
    headers:
      X-API-Key: "{{ mailcow__api_key }}"
  register: result_sieve_prefilter_redirect_rspamd
  retries: 20
  delay: 2
  until:
    - ('json' in result_sieve_prefilter_redirect_rspamd)
    - (result_sieve_prefilter_redirect_rspamd.json[0].user is defined) and ("unknown" in result_sieve_prefilter_redirect_rspamd.json[0].user)
    - (result_sieve_prefilter_redirect_rspamd.json[0].subject is defined) and ("sieve prefilter redirect test" in result_sieve_prefilter_redirect_rspamd.json[0].subject)
    - (result_sieve_prefilter_redirect_rspamd.json[1].user is defined) and ("unknown" in result_sieve_prefilter_redirect_rspamd.json[1].user)
    - (result_sieve_prefilter_redirect_rspamd.json[1].subject is defined) and ("sieve prefilter redirect test" in result_sieve_prefilter_redirect_rspamd.json[1].subject)
  ignore_errors: yes

- set_fact:
    result_sieve_prefilter_redirect_rspamd_symbols_list_0: "{{ result_sieve_prefilter_redirect_rspamd.json[0].symbols | list }}"

- name: Debug Rspamd symbols as list 0
  debug:
    var: result_sieve_prefilter_redirect_rspamd_symbols_list_0

## Symbol Checks
- set_fact:
    result_sieve_prefilter_redirect_rspamd_symbols_list_0_sucess: success
  when: ('ARC_SIGNED' not in result_sieve_prefilter_redirect_rspamd_symbols_list_0) and
        ('DKIM_SIGNED' not in result_sieve_prefilter_redirect_rspamd_symbols_list_0) and
        ('SIEVE_HOST' in result_sieve_prefilter_redirect_rspamd_symbols_list_0) and
        ('FROM_NEQ_ENVFROM' in result_sieve_prefilter_redirect_rspamd_symbols_list_0)

- set_fact:
    result_sieve_prefilter_redirect_rspamd_symbols_list_0_sucess: failed
  when: ('ARC_SIGNED' in result_sieve_prefilter_redirect_rspamd_symbols_list_0) or
        ('DKIM_SIGNED' in result_sieve_prefilter_redirect_rspamd_symbols_list_0) or
        ('SIEVE_HOST' not in result_sieve_prefilter_redirect_rspamd_symbols_list_0) or
        ('FROM_NEQ_ENVFROM' not in result_sieve_prefilter_redirect_rspamd_symbols_list_0)
# End Rspamd Symbols

- set_fact:
    result_sieve_prefilter_redirect_rspamd_symbols_list_1: "{{ result_sieve_prefilter_redirect_rspamd.json[1].symbols | list }}"

- name: Debug Rspamd symbols as list 1
  debug:
    var: result_sieve_prefilter_redirect_rspamd_symbols_list_1

## Symbol Checks
- name: Eval test success
  set_fact:
    result_sieve_prefilter_redirect_rspamd_symbols_list_1_sucess: success
  when:
    - "'ARC_SIGNED' in result_sieve_prefilter_redirect_rspamd_symbols_list_1"

- name: Eval test failure
  set_fact:
    result_sieve_prefilter_redirect_rspamd_symbols_list_1_sucess: failed
  when:
    - (result_sieve_prefilter_redirect_rspamd_symbols_list_1_sucess is undefined)
# End Rspamd Symbols
