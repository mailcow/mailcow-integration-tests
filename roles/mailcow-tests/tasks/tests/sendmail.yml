---

- name: Sending a email to {{ mailcow__dev_null_email }} not encrypted
  community.general.mail:
    host: "{{ mailcow__hostname }}"
    port: 587
    from: "{{ mailcow__mailbox_user_one }}@{{ mailcow__hostname }}"
    username: "{{ mailcow__mailbox_user_one }}@{{ mailcow__hostname }}"
    password: "{{ mailcow_mailbox_pw }}"
    to:
      - "{{ mailcow__dev_null_email }}"
    subject: "sendmail unencrypted test"
    body: "System {{ ansible_hostname }} says hello"
    secure: never
  ignore_errors: yes
  register: result_sendmail_no_tls

- name: Eval test success
  set_fact:
    result_sendmail_no_tls_sucess: success
  when: ('msg' in result_sendmail_no_tls) and ("No Authentication on the server" in result_sendmail_no_tls.msg)

- name: Eval test failure
  set_fact:
    result_sendmail_no_tls_sucess: failed
  when: (result_sendmail_no_tls_sucess is undefined)

- name: Sending a email to {{ mailcow__dev_null_email }} always encrypted
  community.general.mail:
    host: "{{ mailcow__hostname }}"
    port: 587
    from: "{{ mailcow__mailbox_user_one }}@{{ mailcow__test_domain }}"
    username: "{{ mailcow__mailbox_user_one }}@{{ mailcow__test_domain }}"
    password: "{{ mailcow_mailbox_pw }}"
    to:
      - "{{ mailcow__dev_null_email }}"
    subject: "sendmail encrypted test"
    body: System {{ ansible_hostname }} says hello
    secure: starttls
  ignore_errors: yes
  register: result_sendmail_tls

- name: Eval test success
  set_fact:
    result_sendmail_tls_sucess: success
  when: ('msg' in result_sendmail_tls) and ("Mail sent successfully" in result_sendmail_tls.msg)

- name: Eval test failure
  set_fact:
    result_sendmail_tls_sucess: failed
  when: (result_sendmail_tls_sucess is undefined)

- name: Get Rspamd log using API
  uri:
    url: "http://{{ mailcow__hostname }}/api/v1/get/logs/rspamd-history/1"
    method: GET
    body_format: json
    return_content: yes
    status_code: 200
    headers:
      X-API-Key: "{{ mailcow__api_key }}"
  register: result_sendmail_rspamd
  until:
    - ('json' in result_sendmail_rspamd)
  retries: 5
  delay: 10
  ignore_errors: yes

- set_fact:
    result_sendmail_rspamd_symbols_list: "{{ result_sendmail_rspamd.json[0].symbols | list }}"
  ignore_errors: yes

- name: Debug Rspamd symbols as list
  debug:
    var: result_sendmail_rspamd_symbols_list
  ignore_errors: yes

## Symbol Checks
- name: Eval test success
  set_fact:
    result_sendmail_rspamd_symbols_mailcow_auth_sucess: success
  when: ('MAILCOW_AUTH' in result_sendmail_rspamd_symbols_list) and (result_sendmail_rspamd_symbols_list is defined)

- name: Eval test failure
  set_fact:
    result_sendmail_rspamd_symbols_mailcow_auth_sucess: failed
  when: (result_sendmail_rspamd_symbols_mailcow_auth_sucess is undefined)

- name: Eval test success
  set_fact:
    result_sendmail_rspamd_symbols_dyn_rl_check_sucess: success
  when: ('DYN_RL_CHECK' in result_sendmail_rspamd_symbols_list) and (result_sendmail_rspamd_symbols_list is defined)

- name: Eval test failure
  set_fact:
    result_sendmail_rspamd_symbols_dyn_rl_check_sucess: failed
  when: (result_sendmail_rspamd_symbols_dyn_rl_check_sucess is undefined)

- name: Eval test success
  set_fact:
    result_sendmail_rspamd_symbols_dkim_signed_sucess: success
  when: ('DKIM_SIGNED' in result_sendmail_rspamd_symbols_list) and (result_sendmail_rspamd_symbols_list is defined)

- name: Eval test failure
  set_fact:
    result_sendmail_rspamd_symbols_dkim_signed_sucess: failed
  when: (result_sendmail_rspamd_symbols_dkim_signed_sucess is undefined)
## End Symbol Checks

- name: Sending a email from a not existing alias
  community.general.mail:
    host: "{{ mailcow__hostname }}"
    port: 587
    from: "iamnull@{{ mailcow__test_domain }}"
    username: "{{ mailcow__mailbox_user_one }}@{{ mailcow__test_domain }}"
    password: "{{ mailcow_mailbox_pw }}"
    to:
      - "{{ mailcow__dev_null_email }}"
    subject: "sendmail non existent alias test"
    body: "System {{ ansible_hostname }} says hello"
  ignore_errors: yes
  register: result_sendmai_not_allowed_alias

- name: Debug sending a email from a non exsting alias
  debug:
    var: result_sendmai_not_allowed_alias.msg

- name: Eval test success
  set_fact:
    result_sendmail_not_allowed_alias_sucess: success
  when: "'Sender address rejected: not owned by user' in result_sendmai_not_allowed_alias.msg"

- name: Eval test success
  set_fact:
    result_sendmail_not_allowed_alias_sucess: failed
  when: (result_sendmail_not_allowed_alias_sucess is undefined)
