---

- name: Create mailbox for sieve test
  uri:
    url: "https://{{ mailcow__hostname }}/api/v1/add/mailbox"
    method: POST
    body_format: json
    return_content: yes
    status_code: 200
    body: "{{ mailcow__demo_sieve_filter_mailbox_json | to_json }}"
    headers:
      X-API-Key: "{{ mailcow__api_key }}"
  register: result_sieve_prefilter_mailbox
  until: ('json' in result_sieve_prefilter_mailbox)
  retries: 10
  delay: 10

- name: Create sieve prefilter
  uri:
    url: "https://{{ mailcow__hostname }}/api/v1/add/filter"
    method: POST
    body_format: json
    return_content: yes
    status_code: 200
    body: "{{ mailcow__demo_sieve_filter_json | to_json }}"
    headers:
      X-API-Key: "{{ mailcow__api_key }}"
  register: result_sieve_prefilter
  until: ('json' in result_sieve_prefilter)
  retries: 10
  delay: 10

- name: Debug Creation
  debug:
    var: result_sieve_prefilter.json

- name: Get sieve prefilter
  uri:
    url: "https://{{ mailcow__hostname }}/api/v1/get/filters/all"
    method: GET
    body_format: json
    return_content: yes
    status_code: 200
    headers:
      X-API-Key: "{{ mailcow__api_key }}"
  register: result_sieve_prefilter_get
  until:
    - ('json' in result_sieve_prefilter_get)
  retries: 10
  delay: 10

- name: Debug Get
  debug:
    var: result_sieve_prefilter_get.json

- set_fact:
    result_sieve_prefilter_get_success: success
  when: ('json' in result_sieve_prefilter_get) and (result_sieve_prefilter_get.json[0] is defined)

- set_fact:
    result_sieve_prefilter_get_success: failed
  when: ('json' in result_sieve_prefilter_get) and (result_sieve_prefilter_get.json[0] is not defined)

# Send mail
- name: Sending a email to mailcow test instance always encrypted
  mail:
    host: "{{ mailcow__hostname }}"
    port: 587
    from: "{{ mailcow__mailbox_user_two }}@{{ mailcow__test_domain }}"
    username: "{{ mailcow__mailbox_user_two }}@{{ mailcow__test_domain }}"
    password: "{{ mailcow_mailbox_pw }}"
    to:
      - "{{ mailcow__mailbox_user_one }}@{{ mailcow__test_domain }}"
    subject: Ansible-report
    body: System {{ ansible_hostname }} says hello
    secure: starttls
  register: result_sieve_prefilter_sendmail

# Get Rspamd Symbols
- name: Get Rspamd log using API
  uri:
    url: "https://{{ mailcow__hostname }}/api/v1/get/logs/rspamd-history/1"
    method: GET
    body_format: json
    return_content: yes
    status_code: 200
    headers:
      X-API-Key: "{{ mailcow__api_key }}"
  register: result_sieve_prefilter_rspamd
  retries: 20
  delay: 2
  until:
    - ('json' in result_sieve_prefilter_rspamd) and (result_sieve_prefilter_rspamd.json[0].sender_mime is defined) and ("postmaster" in result_sieve_prefilter_rspamd.json[0].sender_mime)

- set_fact:
    result_sieve_prefilter_rspamd_symbols_list: "{{ result_sieve_prefilter_rspamd.json[0].symbols | list }}"

- name: Debug Rspamd symbols as list
  debug:
    var: result_sieve_prefilter_rspamd_symbols_list

## Symbol Checks
- set_fact:
    result_sieve_prefilter_rspamd_symbols_list_sucess: success
  when:
    - "'SIEVE_HOST' in result_sieve_prefilter_rspamd_symbols_list"
    - "'MAILCOW_DOMAIN_HEADER_FROM' in result_sieve_prefilter_rspamd_symbols_list"
    - "'DKIM_SIGNED' in result_sieve_prefilter_rspamd_symbols_list"
    - "'FROM_NEQ_ENVFROM' in result_sieve_prefilter_rspamd_symbols_list"

- set_fact:
    result_sieve_prefilter_rspamd_symbols_list_sucess: failed
  when:
    - "'SIEVE_HOST' not in result_sieve_prefilter_rspamd_symbols_list"
    - "'MAILCOW_DOMAIN_HEADER_FROM' not in result_sieve_prefilter_rspamd_symbols_list"
    - "'DKIM_SIGNED' not in result_sieve_prefilter_rspamd_symbols_list"
    - "'FROM_NEQ_ENVFROM' not in result_sieve_prefilter_rspamd_symbols_list"
# End Rspamd Symbols

- name: Delete sieve prefilter
  uri:
    url: "https://{{ mailcow__hostname }}/api/v1/delete/filter"
    method: POST
    body_format: json
    return_content: yes
    status_code: 200
    body: ["1"]
    headers:
      X-API-Key: "{{ mailcow__api_key }}"
  register: result_sieve_prefilter_delete
  until: ('json' in result_sieve_prefilter_delete)
  retries: 10
  delay: 10

- name: Debug Deletion
  debug:
    var: result_sieve_prefilter_delete.json
